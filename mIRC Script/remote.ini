[script]
n0=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n1=;;;;;;;;;;;;;;;;;Start of Auto-DL;;;;;;;;;;;;;;;;;;
n2=;;;;;;;;;;;;;;;;;;;;;;v2.0.0;;;;;;;;;;;;;;;;;;;;;;;
n3=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n4=;--------------------------------------------------
n5=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n6=;;;;;;;;;;;;;;;;;;;Core Scripts;;;;;;;;;;;;;;;;;;;;
n7=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n8=
n9=;;;
n10=;;;Causes mIRC to load the dll for the first time
n11=;;;and setup some internals.
n12=;;;Should be set to auto-execute on server connect.
n13=;;;
n14=alias /AutoDL {
n15=  dll %DLLName AutoDL_Start
n16=}
n17=
n18=;;;
n19=;;;Start Download (called externally only)
n20=;;;
n21=alias /Start_DL {
n22=  .dcc trust $$1 $+ !*@*
n23=  .auser AutoDLTrustedSources $$1
n24=  msg $$1 xdcc send $$2
n25=}
n26=
n27=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n28=;;;;;;;;;;;;;;;;;;;Event Triggers;;;;;;;;;;;;;;;;;;;;;;
n29=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n30=
n31=on AutoDLTrustedSources:FILERCVD:*.*:{
n32=  .dcc trust -r $nick $+ !*@*
n33=  .ruser AutoDLTrustedSources $nick
n34=  dll %DLLName DownloadStatus true
n35=}
n36=
n37=on AutoDLTrustedSources:GETFAIL:*.*:{
n38=  /msg $nick xdcc cancel
n39=  .dcc trust -r $nick $+ !*@*
n40=  .ruser AutoDLTrustedSources $nick
n41=  dll %DLLName DownloadStatus false
n42=}
n43=
n44=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n45=;;;;;;;;;;;;;;;;;;;;;;GUI Tables;;;;;;;;;;;;;;;;;;;;;;;
n46=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n47=
n48=dialog -l AutoDLTable {
n49=  title "Auto-Downloader"
n50=  size -1 -1 200 180
n51=  option dbu
n52=
n53=  menu "&File", 50
n54=  menu "&Settings", 51, 50
n55=  item "Notifications", 101, 51
n56=  item "Retry Failed Download", 102, 51
n57=  item "Download Delay", 103, 51
n58=  menu "&Aliases", 56, 50
n59=  item "Add Alias...", 55, 56
n60=  item "View/Remove Alias...", 57, 56
n61=  item "Clear All", 58, 56
n62=  item break, 52, 50
n63=  item "&Save Settings", 59, 50
n64=  item break, 61, 50
n65=  item "&Exit", 53, 50
n66=  menu "&Help", 60
n67=  item "&About", 54, 60
n68=
n69=  box "Download Controls", 7, 110 35 85 90
n70=  text "Bot:", 8, 115 45 10 10
n71=  edit "", 9, 128 45 60 10, autohs
n72=  text "Packet(s):", 10, 115 60 25 10
n73=  edit "", 11, 143 60 45 10, autohs
n74=  button "Add", 12, 168 72 20 10
n75=
n76=  box "Download Queue", 1, 5 5 100 150
n77=  list 2, 10 15 90 120, hsbar vsbar
n78=  list 18, 10 130 90 27, vsbar
n79=  button "Cancel Selected", 17, 12 157 50 10
n80=  button "Clear Queue", 3, 65 157 40 10
n81=
n82=  box "", 13, 115 85 75 35
n83=  button "Pause Queue", 14, 122 93 60 10
n84=  button "Resume Queue", 15, 122 105 60 10
n85=
n86=  box "Join Channel", 4, 110 5 85 22
n87=  edit "", 5, 115 13 58 10, autohs
n88=  button "Join", 6, 175 13 15 10
n89=
n90=  button "Exit", 16, 160 160 30 15, ok
n91=}
n92=
n93=dialog -l HelpDLTable {
n94=  title "Auto-Download Help"
n95=  size -1 -1 200 110
n96=  option dbu
n97=
n98=  edit "", 1, 3 3 195 105, read multi
n99=}
n100=
n101=dialog -l AddAliasTable {
n102=  title "Add Alias"
n103=  size -1 -1 80 45
n104=  option dbu
n105=
n106=  text "Bot:", 1, 3 4 10 10
n107=  edit "", 2, 15 3 60 10, autohs %Bot
n108=  text "Alias:", 3, 3 16 20 10
n109=  edit "", 4, 30 15 45 10, autohs %Alias
n110=
n111=  button "Ok", 5, 28 30 20 10, ok result
n112=  button "Cancel", 6, 50 30 25 10, cancel
n113=}
n114=
n115=dialog -l DeleteAliasTable {
n116=  title "Delete Alias"
n117=  size -1 -1 100 80
n118=  option dbu
n119=
n120=  box "Alias : Bot", 1, 5 3 90 60
n121=  list 2, 10 12 80 50, vsbar
n122=
n123=  button "Ok", 3, 48 65 20 10, ok result
n124=  button "Cancel", 4, 70 65 25 10, cancel
n125=}
n126=
n127=dialog -l DownloadDelayTable {
n128=  title "Download Delay"
n129=  size -1 -1 85 35
n130=  option dbu
n131=
n132=  text "Delay (seconds):", 1, 5 5 50 10
n133=  edit "", 2, 60 3 20 10, result
n134=
n135=  button "Ok", 3, 38 20 20 10, ok
n136=  button "Cancel", 4, 60 20 20 10, cancel
n137=}
n138=
n139=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n140=;;;;;;;;;;;;;;;;;;;;GUI Scripts;;;;;;;;;;;;;;;;;;;;;;;;
n141=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n142=
n143=;;;
n144=;;;Used to start the GUI.
n145=;;;
n146=alias /AutoDLGUI {
n147=  dialog -m AutoDL AutoDLTable
n148=}
n149=
n150=;;;
n151=;;;Used to update the UI download list
n152=;;;
n153=alias -l /AutoDL_UI {
n154=  if ($$1 == Add) {
n155=    var %Bot = $$2
n156=    var %Packet = $$3
n157=    inc %DownloadIndex 1
n158=    hadd UIDownloadList %DownloadIndex $+(%Bot, $chr(44), %Packet)
n159=    did -az AutoDL 2 $+(%Bot, $chr(32), $chr(35), %Packet)
n160=  }
n161=  elseif ($$1 == Status) {
n162=    did -oz AutoDL 2 $$2 $+($did(AutoDL, 2, $$2).text, $chr(32), $+(..., $$3))
n163=  }
n164=  elseif ($$1 == Update) {
n165=    var %text = $did(AutoDL, 2, $$2).text
n166=    var %leftpos = $pos(%text, ., 1)
n167=    var %replacetext = $right(%text, $calc((%leftpos - 1) - (2 * (%leftpos - 1))))
n168=    did -oz AutoDL 2 $$2 $replace(%text, %replacetext, $+(..., $$3))
n169=  }
n170=  elseif ($$1 == Clear) {
n171=    hdel -w UIDownloadList *
n172=    %ActiveDLLoc = 1
n173=    did -r AutoDL 2
n174=  }
n175=}
n176=
n177=;;;
n178=;;;/AutoDL_Notification <message>
n179=;;;
n180=alias -l /AutoDL_Notification {
n181=  did -az AutoDL 18 $$1-
n182=  if ($did(AutoDL, 101).state == 1) {
n183=    echo 2 -s $$1-
n184=  } 
n185=}
n186=
n187=;;;
n188=;;;Used by wrapper to update GUI on next download
n189=;;;
n190=alias /Downloading {
n191=  var %Counter = %ActiveDLLoc
n192=  var %MaxCounter = %DownloadIndex
n193=  while (%Counter <= %MaxCounter) {
n194=    var %download = $hget(UIDownloadList, %Counter)
n195=    if (($gettok(%download, 1, 44) == $$1) && ($gettok(%download, 2, 44) == $$2)) {
n196=      /AutoDL_UI Status %Counter Downloading
n197=      %ActiveDLLoc = %Counter
n198=      break
n199=    }
n200=  }
n201=}
n202=
n203=;;;
n204=;;;Used by wrapper to update GUI on current download
n205=;;;
n206=alias /DownloadStatusUpdate {
n207=  var %status
n208=  if ($$1 == Finished) {
n209=    %status = Complete
n210=    hdel UIDownloadList %ActiveDLLoc
n211=    /AutoDL_Notification *Download Queue Finished
n212=  }
n213=  elseif (($$1 == Complete) || ($$1 == Failed)) {
n214=    %status = $$1
n215=    hdel UIDownloadList %ActiveDLLoc
n216=  }
n217=  elseif ($$1 == Retrying) {
n218=    %status = $$1
n219=  }
n220=  /AutoDL_UI Update %ActiveDLLoc %status
n221=}
n222=
n223=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n224=;;;;;;;;;;;;;;;;;;;;;GUI Events;;;;;;;;;;;;;;;;;;;;;;;;
n225=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n226=
n227=on *:dialog:HelpDL:init:0:{
n228=  did -a HelpDL 1 See Wiki @ github.com/Rinsho/mIRCAutoDL/wiki
n229=}
n230=
n231=;;;
n232=;;;Initialize AutoDL Event
n233=;;;
n234=on *:dialog:AutoDL:init:0:{
n235=  set -e %DLLName " $+ $nofile($mircexe) $+ mIRCWrapper.dll $+ "
n236=  set -e %DownloadDelay 5
n237=  set -e %DownloadIndex 0
n238=  set -e %ActiveDLLoc 1
n239=  hmake UIDownloadList 10
n240=  hmake AliasList 10
n241=}
n242=
n243=;;;
n244=;;;Close AutoDL Event
n245=;;;
n246=on *:dialog:AutoDL:close:0:{
n247=  dll -u %DLLName
n248=  hfree UIDownloadList
n249=  hfree AliasList
n250=  unset %DLLName
n251=  unset %DownloadDelay
n252=  unset %DownloadIndex
n253=  unset %ActiveDLLoc
n254=  .rlevel -r AutoDLTrustedSources
n255=}
n256=
n257=;;;
n258=;;;Download Delay Event
n259=;;;
n260=on *:dialog:DownloadDelay:init:0:{
n261=  did -a DownloadDelay 2 %DownloadDelay
n262=}
n263=
n264=;;;
n265=;;;Menu->Aliases->View/Remove Alias Event
n266=;;;
n267=on *:dialog:AutoDL:menu:57:{
n268=  if ($dialog(DeleteAlias, DeleteAliasTable) && (%DeleteSelection != null)) {
n269=    %DeleteSelection = $remove(%DeleteSelection, $chr(32))
n270=    var %return = $dll(%DLLName, Alias_Remove, %DeleteSelection)   
n271=    if (%return == #OK) {
n272=      hdel AliasList %DeleteSelection
n273=    }
n274=    else {
n275=      tokenize 44 %result
n276=      /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n277=    }
n278=  }
n279=  unset %DeleteSelection
n280=}
n281=
n282=;;;
n283=;;;DeleteAlias Initialize Event
n284=;;;
n285=on *:dialog:DeleteAlias:init:0:{
n286=  var %hashSize = $hget(AliasList, 0).item
n287=  if (%hashSize > 0) {
n288=    var %Bot
n289=    var %Alias
n290=    var %Counter = 1
n291=    var %MaxCounter = %hashSize
n292=    while (%Counter <= %MaxCounter) {
n293=      %Alias = $hget(AliasList, %Counter).item
n294=      %Bot = $hget(AliasList, %Alias)
n295=      did -a DeleteNick 2 $+(%Alias,$chr(32),$chr(58),$chr(32),%Bot)
n296=      inc %Counter 1
n297=    }
n298=  }
n299=  set -e %DeleteSelection null
n300=}
n301=
n302=;;;
n303=;;;DeleteAlias Selection Event
n304=;;;
n305=on *:dialog:DeleteAlias:sclick:2:{
n306=  %DeleteSelection = $gettok($did(DeleteAlias, 2).seltext, 1, 58)
n307=}
n308=
n309=;;;
n310=;;;Clear Queue Event
n311=;;;
n312=on *:dialog:AutoDL:sclick:3:{
n313=  var %result = $dll(%DLLName, Download_Clear, None)
n314=  if (%result == #OK) {  
n315=    /AutoDL_UI Clear
n316=  }
n317=  else {
n318=    tokenize 44 %result
n319=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n320=  }
n321=}
n322=
n323=;;;
n324=;;;Save Queue Event
n325=;;;
n326=on *:dialog:AutoDL:sclick:14:{
n327=  var %result = $dll(%DLLName, Download_Save, None)
n328=  if (%result == #OK) {
n329=    var %Counter = %ActiveDLLoc
n330=    var %MaxCounter = %DownloadIndex
n331=    while (%Counter <= %MaxCounter) {
n332=      /AutoDL_UI Status %Counter Saved
n333=      inc %Counter 1
n334=    }
n335=    %ActiveDLLoc = $calc(%DownloadIndex + 1)
n336=  }
n337=  else {
n338=    tokenize 44 %result
n339=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n340=  }
n341=}
n342=
n343=;;;
n344=;;;Load Queue Event
n345=;;;
n346=on *:dialog:AutoDL:sclick:15:{
n347=  var %result = $dll(%DLLName, Download_Load, None)
n348=  if ($gettok(%result, 1, 44) != #Error) {
n349=    var %Counter = 1
n350=    var %MaxCounter = $numtok(%result, 35)   
n351=    tokenize 35 %result
n352=    while (%Counter <= %MaxCounter) {
n353=      var %Token = $ [ $+ [ %Counter ] ]
n354=      var %Bot = $gettok(%Token, 1, 44)
n355=      var %Count = 2
n356=      var %MaxCount = $numtok(%Token, 44)
n357=      while (%Count <= %MaxCount) {
n358=        var %Packet = $gettok(%Token, %Count, 44)
n359=        /AutoDL_UI Add %Bot %Packet
n360=        inc %Count 1
n361=      }
n362=      inc %Counter 1
n363=    }
n364=  }
n365=  else {
n366=    tokenize 44 %FileList
n367=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n368=  }
n369=}
n370=
n371=;;;
n372=;;;Add Download Event
n373=;;;
n374=on *:dialog:AutoDL:sclick:12:{
n375=  var %FileList = $+($did(9), $chr(44), $did(11))
n376=  var %Trimming = $true
n377=  while (%Trimming) {
n378=    if ($right(%FileList, 1) == $chr(32) || $right(%FileList, 1) == $chr(44)) {
n379=      %FileList = $left(%FileList, -1)
n380=    }
n381=    else {
n382=      %Trimming = $false
n383=    }
n384=  }
n385=  %FileList = $regsubex(%FileList, $+(/[\s,$chr(44),]+/g), $chr(44))
n386=
n387=  var %result = $dll(%DLLName, Download_Add, %FileList)  
n388=  if (%result == #OK) {
n389=    var %Counter = 2
n390=    var %MaxCounter = $numtok(%FileList, 44)
n391=    tokenize 44 %FileList
n392=    while (%Counter <= %MaxCounter) {
n393=      /AutoDL_UI Add $1 $ [ $+ [ %Counter ] ]
n394=      inc %Counter 1
n395=    }
n396=    did -r AutoDL 9
n397=    did -r AutoDL 11
n398=  }
n399=  else {
n400=    tokenize 44 %result
n401=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n402=  }
n403=}
n404=
n405=;;;
n406=;;;Remove Download Event
n407=;;;
n408=on *:dialog:AutoDL:sclick:17:{
n409=  var %LineNumber = $did(AutoDL, 2).sel
n410=  if (%LineNumber != %ActiveDLLoc) {
n411=    var %Data = $did(AutoDL, 2).seltext
n412=    var %Bot = $gettok(%Data, 1, 32)
n413=    var %Packet = $gettok(%Data, 2, 32)
n414=    %Packet = $right(%Packet, $calc($len(%Packet) - 1))
n415=    var %result = $dll(%DLLName, Download_Remove, $+(%Bot, $chr(44), %Packet))
n416=    if (%result == #OK) {
n417=      /AutoDL_UI Status %LineNumber Cancelled
n418=    }
n419=    else {
n420=      tokenize 44 %result
n421=      /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n422=    }
n423=  }
n424=  else {
n425=    /AutoDL_Notification *Cannot remove download in progress.
n426=  }
n427=}
n428=
n429=;;;
n430=;;;Menu->Settings->Notifications Event
n431=;;;
n432=on *:dialog:AutoDL:menu:101:{
n433=  if ($did(101).state == 1) {
n434=    did -u AutoDL 101
n435=  }
n436=  else {
n437=    did -c AutoDL 101
n438=  }
n439=}
n440=
n441=;;;
n442=;;;Menu->Settings->Retry Failed Download Event
n443=;;;
n444=on *:dialog:AutoDL:menu:102:{
n445=  var %tempValue
n446=  if ($did(102).state == 1) {
n447=    did -u AutoDL 102
n448=    %tempValue = false
n449=  }
n450=  else {
n451=    did -c AutoDL 102
n452=    %tempValue = true
n453=  }
n454=  var %result = $dll(%DLLName, Setting_Update, $+(RetryFailedDownload, $chr(44), %tempValue))
n455=  if (%result != #OK) {
n456=    if ($did(102).state == 1) {
n457=      did -u AutoDL 102
n458=    }
n459=    else {
n460=      did -c AutoDL 102
n461=    }
n462=    tokenize 44 %result
n463=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n464=  }
n465=}
n466=
n467=;;;
n468=;;;Menu->Settings->Download Delay Event
n469=;;;
n470=on *:dialog:AutoDL:menu:103:{
n471=  var %newDelay = $dialog(DownloadDelay, DownloadDelayTable)
n472=  if (%newDelay isnum) {
n473=    var %result = $dll(%DLLName, Setting_Update, $+(DownloadDelay, $chr(44), %newDelay))
n474=    if (%result == #OK) {
n475=      %DownloadDelay = %newDelay
n476=    }
n477=    else {
n478=      tokenize 44 %result
n479=      /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n480=    }
n481=  }
n482=}
n483=
n484=;;;
n485=;;;Menu->Exit Event
n486=;;;
n487=on *:dialog:AutoDL:menu:53:{
n488=  dialog -k AutoDL
n489=}
n490=
n491=;;;
n492=;;;Menu->Help Event
n493=;;;
n494=on *:dialog:AutoDL:menu:54:{
n495=  dialog -m HelpDL HelpDLTable
n496=}
n497=
n498=;;;
n499=;;;Menu->Aliases->Add Alias Event
n500=;;;
n501=on *:dialog:AutoDL:menu:55:{
n502=  if ($dialog(AddAlias, AddAliasTable)) {
n503=    var %result = $dll(%DLLName, Alias_Add, $+(%Alias, $chr(44), %Bot))
n504=    if (%result == #OK) {
n505=      hadd AliasList %Alias %Bot
n506=    }
n507=    else {
n508=      tokenize 44 %result
n509=      /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n510=    }
n511=    unset %Bot
n512=    unset %Alias
n513=  }
n514=}
n515=
n516=;;;
n517=;;;Menu->Aliases->Clear Event
n518=;;;
n519=on *:dialog:AutoDL:menu:58:{
n520=  var %result = $dll(%DLLName, Alias_Clear, None)
n521=  if (%result == #OK) {
n522=    hdel -w AliasList *
n523=  }
n524=  else {
n525=    tokenize 44 %result
n526=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n527=  }
n528=}
n529=
n530=;;;
n531=;;;Menu->Save Settings Event
n532=;;;
n533=on *:dialog:AutoDL:menu:59:{
n534=  var %NewSettings = $+(RetryFailedDownload, $chr(44))
n535=  if ($did(102).state == 1) {
n536=    %NewSettings = $+(%NewSettings, true, $chr(35))
n537=  }
n538=  else {
n539=    %NewSettings = $+(%NewSettings, false, $chr(35))
n540=  }
n541=  %NewSettings = $+(%NewSettings, DownloadDelay, $chr(44), %DownloadDelay)
n542=  var %result = $dll(%DLLName, Setting_Save, %NewSettings)
n543=  if (%result != #OK) {
n544=    tokenize 44 %result
n545=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n546=  }
n547=}
n548=
n549=;;;
n550=;;;Join Channel Event
n551=;;;
n552=on *:dialog:AutoDL:sclick:6:{
n553=  var %ChannelName = $did(5)
n554=  if ($left(%ChannelName,1) != $chr(35)) {
n555=    %ChannelName = $chr(35) $+ %ChannelName
n556=  }
n557=  join %ChannelName
n558=  did -r AutoDL 5
n559=}
n560=
n561=;------------------------------------------------------
n562=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n563=;;;;;;;;;;;;;;;;;;End of Auto-DL BETA;;;;;;;;;;;;;;;;;;
n564=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
