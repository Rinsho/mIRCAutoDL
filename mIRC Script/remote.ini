[script]
n0=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n1=;;;;;;;;;;;;;;;;Start of Auto-DL BETA;;;;;;;;;;;;;;
n2=;;;;;;;;;;;;;;;;;;;;;;V0.3.0;;;;;;;;;;;;;;;;;;;;;;;
n3=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n4=;--------------------------------------------------
n5=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n6=;;;;;;;;;;;;;;;;;;;;;;;GUI;;;;;;;;;;;;;;;;;;;;;;;;;
n7=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n8=
n9=dialog -l AutoDLTable {
n10=  title "Auto-Downloader"
n11=  size -1 -1 200 180
n12=  option dbu
n13=
n14=  menu "&File", 50
n15=  menu "&Settings", 51, 50
n16=  item "Notifications", 101, 51
n17=  item "Retry Failed Download", 102, 51
n18=  item "Download Delay", 103, 51
n19=  menu "&Nicks", 56, 50
n20=  item "Add Nick...", 55, 56
n21=  item "View/Remove Nick...", 57, 56
n22=  item "Clear All", 58, 56
n23=  item break, 52, 50
n24=  item "&Save Settings", 59, 50
n25=  item break, 61, 50
n26=  item "&Exit", 53, 50
n27=  menu "&Help", 60
n28=  item "&About", 54, 60
n29=
n30=  box "Download Controls", 7, 110 35 85 90
n31=  text "Bot:", 8, 115 45 10 10
n32=  edit "", 9, 128 45 60 10, autohs
n33=  text "Packet(s):", 10, 115 60 25 10
n34=  edit "", 11, 143 60 45 10, autohs
n35=  button "Add", 12, 168 72 20 10
n36=
n37=  box "Download Queue", 1, 5 5 100 150
n38=  list 2, 10 15 90 120, hsbar vsbar
n39=  list 18, 10 130 90 27, vsbar
n40=  button "Cancel Selected", 17, 12 157 50 10
n41=  button "Clear Queue", 3, 65 157 40 10
n42=
n43=  box "", 13, 115 85 75 35
n44=  button "Pause Queue", 14, 122 93 60 10
n45=  button "Resume Queue", 15, 122 105 60 10
n46=
n47=  box "Join Channel", 4, 110 5 85 22
n48=  edit "", 5, 115 13 58 10, autohs
n49=  button "Join", 6, 175 13 15 10
n50=
n51=  button "Exit", 16, 160 160 30 15, ok
n52=}
n53=
n54=dialog -l HelpDLTable {
n55=  title "Auto-Downloader Help"
n56=  size -1 -1 200 110
n57=  option dbu
n58=
n59=  edit "", 1, 3 3 195 105, read multi
n60=}
n61=
n62=dialog -l AddNickTable {
n63=  title "Add Nickname"
n64=  size -1 -1 80 45
n65=  option dbu
n66=
n67=  text "Bot:", 1, 3 4 10 10
n68=  edit "", 2, 15 3 60 10, autohs %Botname
n69=  text "Nickname:", 3, 3 16 30 10
n70=  edit "", 4, 30 15 45 10, autohs %Nickname
n71=
n72=  button "Ok", 5, 28 30 20 10, ok result
n73=  button "Cancel", 6, 50 30 25 10, cancel
n74=}
n75=
n76=dialog -l DeleteNickTable {
n77=  title "Delete Nickname"
n78=  size -1 -1 100 80
n79=  option dbu
n80=
n81=  box "Bot : Nickname", 1, 5 3 90 60
n82=  list 2, 10 12 80 50, vsbar
n83=
n84=  button "Ok", 3, 48 65 20 10, ok result
n85=  button "Cancel", 4, 70 65 25 10, cancel
n86=}
n87=
n88=dialog -l DownloadDelayTable {
n89=  title "Download Delay"
n90=  size -1 -1 85 35
n91=  option dbu
n92=
n93=  text "Delay (seconds):", 1, 5 5 50 10
n94=  edit "", 2, 60 3 20 10, result
n95=
n96=  button "Ok", 3, 38 20 20 10, ok
n97=  button "Cancel", 4, 60 20 20 10, cancel
n98=}
n99=
n100=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n101=;;;;;;;;;;;;;;;;;;;;;;Aliases;;;;;;;;;;;;;;;;;;;;;;;;
n102=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n103=
n104=;;;
n105=;;;Only consumer-facing command.  Used to start the program.
n106=;;;
n107=alias /AutoDL {
n108=  dialog -m AutoDL AutoDLTable
n109=}
n110=
n111=;;;
n112=;;;/Settings <setting> <value> | $Settings(<setting>).Value
n113=;;;
n114=alias -l /Settings {
n115=  if ($prop == Value) {
n116=    return %DL [ $+ [ $$1 ] ]
n117=  }
n118=  else {
n119=    %DL [ $+ [ $$1 ] ] = $2
n120=  }
n121=}
n122=
n123=;;;
n124=;;;/UIList <Add|Status|Update> <Bot|LineNumber> <Packet|Status> <NewStatus>
n125=;;;
n126=alias -l /UIList {
n127=  if ($$1 == Add) {
n128=    var %Bot = $$2
n129=    var %Packet = $$3
n130=    did -a AutoDL 2 $+(%Bot, $chr(32), $chr(35), %Packet)
n131=  }
n132=  elseif ($$1 == Status) {
n133=    did -oz AutoDL 2 $$2 $+($did(AutoDL, 2, $$2).text, $chr(32), $+(..., $$3))
n134=  }
n135=  elseif ($$1 == Update) {
n136=    did -oz AutoDL 2 $$2 $replace($did(AutoDL, 2, $$2).text, $+(..., $$3), $+(..., $4))
n137=  }
n138=}
n139=
n140=;;;
n141=;;;/AutoDL_StartDL
n142=;;;
n143=alias -l /AutoDL_StartDL {
n144=  /tokenize 44 $dll(%DLLName, Queue_NextItem, None)
n145=  if ($1 != null) {
n146=    inc %ActiveDLLoc 1
n147=    while (($right($did(AutoDL,2,%ActiveDLLoc),9) == Cancelled) || ($right($did(AutoDL,2,%ActiveDLLoc),5) == Saved)) {
n148=      inc %ActiveDLLoc 1
n149=    }
n150=    /UIList Status %ActiveDLLoc Downloading
n151=    %CurrentPacket = $2
n152=    .dcc trust $1 $+ !*@*
n153=    .auser AutoDLTrustedSources $1
n154=    .timer 1 $Settings(Delay).Value /msg $1 xdcc send %CurrentPacket
n155=  }
n156=  else {
n157=    %QueueComplete = True
n158=    /AutoDL_Notification *Download Queue finished.
n159=  }
n160=}
n161=
n162=;;;
n163=;;;/AutoDL_Notification <message>
n164=;;;
n165=alias -l /AutoDL_Notification {
n166=  did -az AutoDL 18 $$1-
n167=  if ($Settings(Notifications).Value == True) {
n168=    echo 2 -s $$1-
n169=  } 
n170=}
n171=
n172=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n173=;;;;;;;;;;;;;;;;;;;Event Triggers;;;;;;;;;;;;;;;;;;;;;;
n174=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n175=
n176=on AutoDLTrustedSources:FILERCVD:*.*:{
n177=  if (%ActiveDLLoc != 0) {
n178=    /UIList Update %ActiveDLLoc Downloading Completed
n179=  }
n180=  .dcc trust -r $nick $+ !*@*
n181=  .ruser AutoDLTrustedSources $nick
n182=  /AutoDL_StartDL
n183=}
n184=
n185=on AutoDLTrustedSources:GETFAIL:*.*:{
n186=  /msg $nick xdcc cancel
n187=  if ($Settings(RetryFailedDownload).Value == True) {
n188=    .timer 1 $Settings(Delay).Value /msg $nick xdcc send %CurrentPacket
n189=    /AutoDL_Notification *Restarting Download...
n190=  }
n191=  else {  
n192=    if (%ActiveDLLoc != 0) {
n193=      /UIList Update %ActiveDLLoc Downloading Failed
n194=    }
n195=    .dcc trust -r $nick $+ !*@*
n196=    .ruser AutoDLTrustedSources $nick
n197=    /AutoDL_StartDL
n198=  }
n199=}
n200=
n201=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n202=;;;;;;;;;;;;;;;;;;;Dialog (GUI) events;;;;;;;;;;;;;;;;;;;
n203=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n204=
n205=on *:dialog:HelpDL:init:0:{
n206=  did -a HelpDL 1 Download Guide: $crlf
n207=  did -a HelpDL 1 Bot - Username you wish to download from (only XDCC supported). $crlf
n208=  did -a HelpDL 1 Packet(s) - Packet number of the file(s) you wish to download. $crlf
n209=  did -a HelpDL 1 ++Use spaces or commas in between packet numbers for multiple files. $crlf
n210=  did -a HelpDL 1 ++Example: 1,3 5, 10-20 $crlf $crlf
n211=  did -a HelpDL 1 Pause Queue - Cancels and saves current download queue. $crlf
n212=  did -a HelpDL 1 Resume Queue - Resumes saved download queue. $crlf $crlf
n213=  did -a HelpDL 1 Triggers: $crlf
n214=  did -a HelpDL 1 Notifications: Turns on status-window notifications. $crlf
n215=  did -a HelpDL 1 Retry Failed Download: Attempts to re-download a failed download. $crlf
n216=  did -a HelpDL 1 ++This can be detrimental with certain XDCC setups and cause undefined behavior
n217=}
n218=
n219=;;;
n220=;;;
n221=;;;
n222=on *:dialog:DownloadDelay:init:0:{
n223=  /did -a DownloadDelay 2 $Settings(Delay).Value
n224=}
n225=
n226=;;;
n227=;;;Delete Nick Initialize Event
n228=;;;
n229=on *:dialog:DeleteNick:init:0:{
n230=  var %NickList = $dll(%DLLName, Nick_GetAll, None)
n231=  if (%NickList != null) {
n232=    var %Bot
n233=    var %Nick
n234=    var %Counter = 1
n235=    var %MaxCounter = $numtok(%NickList, 44)
n236=    /tokenize 44 %NickList  
n237=    while (%Counter <= %MaxCounter) {
n238=      %Bot = $ [ $+ [ %Counter ] ]
n239=      inc %Counter 1
n240=      %Nick = $ [ $+ [ %Counter ] ]
n241=      did -a DeleteNick 2 $+(%Bot,$chr(32),$chr(58),$chr(32),%Nick)
n242=      inc %Counter 1
n243=    }
n244=  }
n245=  set -e %DeleteSelection null
n246=}
n247=
n248=;;;
n249=;;;View/Remove Nick Selection Event
n250=;;;
n251=on *:dialog:DeleteNick:sclick:2:{
n252=  %DeleteSelection = $gettok($did(DeleteNick, 2).seltext, 2, 58)
n253=}
n254=
n255=;;;
n256=;;;Menu->Nicks->View/Remove Nick Event
n257=;;;
n258=on *:dialog:AutoDL:menu:57:{
n259=  if ($dialog(DeleteNick, DeleteNickTable) && (%DeleteSelection != null)) {
n260=    if (!$dll(%DLLName, Nick_Remove, %DeleteSelection)) {
n261=      /AutoDL_Notification *Nickname remove failed.
n262=    } 
n263=  }
n264=  unset %DeleteSelection
n265=}
n266=
n267=;;;
n268=;;;Initialize AutoDL Event
n269=;;;
n270=on *:dialog:AutoDL:init:0:{
n271=  set -e %DLLName " $+ $nofile($mircexe) $+ AutoDLWrapper.dll $+ "
n272=  set -e %ActiveDLLoc 0
n273=  set -e %CurrentPacket 0
n274=  set -e %DLNotifications
n275=  set -e %DLRetryFailedDownload
n276=  set -e %DLDelay
n277=  set -e %QueueComplete True
n278=
n279=  /tokenize 44 $dll(%DLLName, Settings_Load, None)
n280=  /Settings Notifications $1
n281=  /Settings RetryFailedDownload $2
n282=  /Settings Delay $3
n283=  if ($1 == True) {
n284=    did -c AutoDL 101
n285=  }
n286=  if ($2 == True) {
n287=    did -c AutoDL 102
n288=  }
n289=}
n290=
n291=;;;
n292=;;;Close AutoDL Event
n293=;;;
n294=on *:dialog:AutoDL:close:0:{
n295=  /dll -u %DLLName
n296=  unset %DLLName
n297=  unset %DLNotifications
n298=  unset %DLRetryFailedDownload
n299=  unset %DLDelay
n300=  unset %ActiveDLLoc
n301=  unset %CurrentPacket
n302=  unset %QueueComplete
n303=  .rlevel -r AutoDLTrustedSources
n304=}
n305=
n306=;;;
n307=;;;Clear Queue Event
n308=;;;
n309=on *:dialog:AutoDL:sclick:3:{
n310=  %ActiveDLLoc = 0
n311=  did -r AutoDL 2
n312=  did -r AutoDL 18
n313=  /dll %DLLName Queue_Clear
n314=}
n315=
n316=;;;
n317=;;;Join Channel Event
n318=;;;
n319=on *:dialog:AutoDL:sclick:6:{
n320=  var %ChannelName = $did(5)
n321=  if ($left(%ChannelName,1) != $chr(35)) {
n322=    %ChannelName = $chr(35) $+ %ChannelName
n323=  }
n324=  join %ChannelName
n325=  did -r AutoDL 5
n326=}
n327=
n328=;;;
n329=;;;Pause Queue Event
n330=;;;
n331=on *:dialog:AutoDL:sclick:14:{
n332=  var %Counter = $calc(%ActiveDLLoc + 1)
n333=  var %MaxCounter = $did(AutoDL, 2).lines
n334=  if (%Counter <= %MaxCounter) {
n335=    while (%Counter <= %MaxCounter) {
n336=      /UIList Status %Counter Saved
n337=      inc %Counter 1
n338=    }
n339=    /dll %DLLName Queue_Save
n340=  }
n341=}
n342=
n343=;;;
n344=;;;Resume Queue Event
n345=;;;
n346=on *:dialog:AutoDL:sclick:15:{
n347=  var %FileList = $dll(%DLLName, Queue_Load, None)
n348=  if (%FileList != null) {
n349=    var %Counter = 1
n350=    var %MaxCounter = $numtok(%FileList, 35)   
n351=    /tokenize 35 %FileList
n352=    while (%Counter <= %MaxCounter) {
n353=      var %token = $ [ $+ [ %Counter ] ]
n354=      var %bot = $gettok(%token, 1, 44)
n355=      var %Count = 2
n356=      var %MaxCount = $numtok(%token, 44)
n357=      while (%Count <= %MaxCount) {
n358=        /UIList Add %bot $gettok(%token, %Count, 44)
n359=        inc %Count 1
n360=      }
n361=      inc %Counter 1
n362=    }
n363=    if (%QueueComplete == True) {
n364=      %QueueComplete = False
n365=      /AutoDL_StartDL
n366=    }
n367=  }
n368=}
n369=
n370=;;;
n371=;;;Add Download Event
n372=;;;
n373=on *:dialog:AutoDL:sclick:12:{
n374=  var %FullName = $dll(%DLLName, Nick_GetName, $did(9))
n375=  if (%FullName == null) {
n376=    %FullName = $did(9)
n377=  }
n378=  var %FileList = $+(%FullName,$chr(44),$did(11))
n379=  %FileList = $regsubex(DLFormat, %FileList, $+(/[\s,$chr(44),]+/g), $chr(44))
n380=  %FileList = $dll(%DLLName, Queue_Add, %FileList)
n381=
n382=  var %Counter = 1
n383=  var %MaxCounter = $numtok(%FileList, 44)
n384=  /tokenize 44 %FileList
n385=  while (%Counter <= %MaxCounter) {
n386=    /UIList Add $did(9) $ [ $+ [ %Counter ] ]
n387=    inc %Counter 1
n388=  }
n389=  did -r AutoDL 9
n390=  did -r AutoDL 11
n391=  if (%QueueComplete == True) {
n392=    %QueueComplete = False
n393=    /AutoDL_StartDL
n394=  }
n395=}
n396=
n397=;;;
n398=;;;Remove Download Event
n399=;;;
n400=on *:dialog:AutoDL:sclick:17:{
n401=  var %LineNumber = $did(AutoDL, 2).sel
n402=  if (%LineNumber != %ActiveDLLoc) {
n403=    var %Data = $did(AutoDL, 2).seltext
n404=    var %Bot = $gettok(%Data, 1, 32)
n405=    var %Temp = $dll(%DLLName, Nick_GetName, %Bot)
n406=    if (%Temp != null) {
n407=      %Bot = %Temp
n408=    }
n409=    var %Packet = $gettok(%Data, 2, 32)
n410=    %Packet = $right(%Packet, $calc($len(%Packet) - 1))
n411=    if ($dll(%DLLName, Queue_Remove, $+(%Bot, $chr(44), %Packet))) {
n412=      /UIList Status %LineNumber Cancelled
n413=    }
n414=    else {
n415=      /AutoDL_Notification *Remove download failed.
n416=    }
n417=  }
n418=  else {
n419=    /AutoDL_Notification *Cannot remove download in progress.
n420=  }
n421=}
n422=
n423=;;;
n424=;;;Menu->Settings->Notifications Event
n425=;;;
n426=on *:dialog:AutoDL:menu:101:{
n427=  if ($did(101).state == 1) {
n428=    did -u AutoDL 101
n429=    /Settings Notifications False
n430=  }
n431=  else {
n432=    did -c AutoDL 101
n433=    /Settings Notifications True
n434=  }
n435=}
n436=
n437=;;;
n438=;;;Menu->Settings->Retry Failed Download Event
n439=;;;
n440=on *:dialog:AutoDL:menu:102:{
n441=  if ($did(102).state == 1) {
n442=    did -u AutoDL 102
n443=    /Settings RetryFailedDownload False
n444=  }
n445=  else {
n446=    did -c AutoDL 102
n447=    /Settings RetryFailedDownload True
n448=  }
n449=}
n450=
n451=;;;
n452=;;;Menu->Settings->Download Delay Event
n453=;;;
n454=on *:dialog:AutoDL:menu:103:{
n455=  var %result = $dialog(DownloadDelay, DownloadDelayTable)
n456=  if (%result isnum) {
n457=    /Settings Delay %result
n458=  }
n459=}
n460=
n461=;;;
n462=;;;Menu->Exit Event
n463=;;;
n464=on *:dialog:AutoDL:menu:53:{
n465=  dialog -k AutoDL
n466=}
n467=
n468=;;;
n469=;;;Menu->Help Event
n470=;;;
n471=on *:dialog:AutoDL:menu:54:{
n472=  dialog -m HelpDL HelpDLTable
n473=}
n474=
n475=;;;
n476=;;;Menu->Nicks->Add Nick Event
n477=;;;
n478=on *:dialog:AutoDL:menu:55:{
n479=  if ($dialog(AddNick, AddNickTable)) {
n480=    if (!$dll(%DLLName, Nick_Add, $+(%Botname, $chr(44), %Nickname))) {
n481=      /AutoDL_Notification *Add nickname failed.
n482=    }
n483=    unset %Botname
n484=    unset %Nickname
n485=  }
n486=}
n487=
n488=;;;
n489=;;;Menu->Nicks->Clear All Event
n490=;;;
n491=on *:dialog:AutoDL:menu:58:{
n492=  /dll %DLLName Nick_Clear
n493=}
n494=
n495=;;;
n496=;;;Menu->Save Settings Event
n497=;;;
n498=on *:dialog:AutoDL:menu:59:{
n499=  var %NewSettings = $Settings(Notifications).Value $+ $chr(44)
n500=  %NewSettings = %NewSettings $+ $Settings(RetryFailedDownload).Value $+ $chr(44)
n501=  %NewSettings = %NewSettings $+ $Settings(Delay).Value
n502=  /dll %DLLName Settings_Save %NewSettings
n503=}
n504=
n505=;-----------------------------------------------------
n506=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n507=;;;;;;;;;;;;;;;;;;End of Auto-DL BETA;;;;;;;;;;;;;;;;;
n508=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
