[script]
n0=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n1=;;;;;;;;;;;;;;;;;Start of Auto-DL;;;;;;;;;;;;;;;;;;
n2=;;;;;;;;;;;;;;;;;;;;;;v2.0.0;;;;;;;;;;;;;;;;;;;;;;;
n3=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n4=;--------------------------------------------------
n5=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n6=;;;;;;;;;;;;;;;;;;;Core Scripts;;;;;;;;;;;;;;;;;;;;
n7=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n8=
n9=;;;
n10=;;;Causes mIRC to load the dll for the first time
n11=;;;and setup some internals.
n12=;;;
n13=alias /AutoDL {
n14=  dll %DLLName AutoDL_Start
n15=}
n16=
n17=;;;
n18=;;;Start Download (called externally only)
n19=;;;
n20=alias /Start_DL {
n21=  .dcc trust $$1 $+ !*@*
n22=  .auser AutoDLTrustedSources $$1
n23=  msg $$1 xdcc send $$2
n24=}
n25=
n26=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n27=;;;;;;;;;;;;;;;;;;;Event Triggers;;;;;;;;;;;;;;;;;;;;;;
n28=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n29=
n30=on AutoDLTrustedSources:FILERCVD:*.*:{
n31=  .dcc trust -r $nick $+ !*@*
n32=  .ruser AutoDLTrustedSources $nick
n33=  dll %DLLName RequestNextDownload true
n34=}
n35=
n36=on AutoDLTrustedSources:GETFAIL:*.*:{
n37=  msg $nick xdcc cancel
n38=  .dcc trust -r $nick $+ !*@*
n39=  .ruser AutoDLTrustedSources $nick
n40=  dll %DLLName RequestNextDownload false
n41=}
n42=
n43=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n44=;;;;;;;;;;;;;;;;;;;;;;GUI Tables;;;;;;;;;;;;;;;;;;;;;;;
n45=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n46=
n47=dialog -l AutoDLTable {
n48=  title "Auto-Downloader"
n49=  size -1 -1 200 180
n50=  option dbu
n51=
n52=  menu "&File", 50
n53=  menu "&Settings", 51, 50
n54=  item "Notifications", 101, 51
n55=  item "Retry Failed Download", 102, 51
n56=  item "Download Delay", 103, 51
n57=  menu "&Aliases", 56, 50
n58=  item "Add Alias...", 55, 56
n59=  item "View/Remove Alias...", 57, 56
n60=  item "Clear All", 58, 56
n61=  item break, 52, 50
n62=  item "&Save Settings", 59, 50
n63=  item break, 61, 50
n64=  item "&Exit", 53, 50
n65=  menu "&Help", 60
n66=  item "&About", 54, 60
n67=
n68=  box "Download Controls", 7, 110 35 85 90
n69=  text "Bot:", 8, 115 45 10 10
n70=  edit "", 9, 128 45 60 10, autohs
n71=  text "Packet(s):", 10, 115 60 25 10
n72=  edit "", 11, 143 60 45 10, autohs
n73=  button "Add", 12, 168 72 20 10
n74=
n75=  box "Download Queue", 1, 5 5 100 150
n76=  list 2, 10 15 90 120, hsbar vsbar multsel
n77=  list 18, 10 130 90 27, vsbar
n78=  button "Cancel Selected", 17, 12 157 50 10
n79=  button "Clear Queue", 3, 65 157 40 10
n80=
n81=  box "", 13, 115 85 75 35
n82=  button "Pause Queue", 14, 122 93 60 10
n83=  button "Resume Queue", 15, 122 105 60 10
n84=
n85=  box "Join Channel", 4, 110 5 85 22
n86=  edit "", 5, 115 13 58 10, autohs
n87=  button "Join", 6, 175 13 15 10
n88=
n89=  button "Exit", 16, 160 160 30 15, ok
n90=}
n91=
n92=dialog -l HelpDLTable {
n93=  title "Auto-Download Help"
n94=  size -1 -1 200 110
n95=  option dbu
n96=
n97=  edit "", 1, 3 3 195 105, read multi
n98=}
n99=
n100=dialog -l AddAliasTable {
n101=  title "Add Alias"
n102=  size -1 -1 80 45
n103=  option dbu
n104=
n105=  text "Bot:", 1, 3 4 10 10
n106=  edit "", 2, 15 3 60 10, autohs %Bot
n107=  text "Alias:", 3, 3 16 20 10
n108=  edit "", 4, 30 15 45 10, autohs %Alias
n109=
n110=  button "Ok", 5, 28 30 20 10, ok result
n111=  button "Cancel", 6, 50 30 25 10, cancel
n112=}
n113=
n114=dialog -l DeleteAliasTable {
n115=  title "Delete Alias"
n116=  size -1 -1 100 80
n117=  option dbu
n118=
n119=  box "Alias : Bot", 1, 5 3 90 60
n120=  list 2, 10 12 80 50, vsbar
n121=
n122=  button "Ok", 3, 48 65 20 10, ok result
n123=  button "Cancel", 4, 70 65 25 10, cancel
n124=}
n125=
n126=dialog -l DownloadDelayTable {
n127=  title "Download Delay"
n128=  size -1 -1 85 35
n129=  option dbu
n130=
n131=  text "Delay (seconds):", 1, 5 5 50 10
n132=  edit "", 2, 60 3 20 10, result
n133=
n134=  button "Ok", 3, 38 20 20 10, ok
n135=  button "Cancel", 4, 60 20 20 10, cancel
n136=}
n137=
n138=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n139=;;;;;;;;;;;;;;;;;;;;GUI Scripts;;;;;;;;;;;;;;;;;;;;;;;;
n140=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n141=
n142=;;;
n143=;;;Used to start the GUI.
n144=;;;
n145=alias /AutoDLGUI {
n146=  dialog -m AutoDL AutoDLTable
n147=}
n148=
n149=;;;
n150=;;;Used to update the UI download list
n151=;;;
n152=alias -l /AutoDL_UI {
n153=  if ($$1 == Add) {
n154=    var %Bot = $$2
n155=    var %Packet = $$3
n156=    inc %DownloadIndex 1
n157=    hadd UIDownloadList %DownloadIndex $+(%Bot, $chr(44), %Packet)
n158=    did -az AutoDL 2 $+(%Bot, $chr(32), $chr(35), %Packet)
n159=  }
n160=  elseif ($$1 == Status) {
n161=    did -oz AutoDL 2 $$2 $+($did(AutoDL, 2, $$2).text, $chr(32), $+(..., $$3))
n162=  }
n163=  elseif ($$1 == Update) {
n164=    var %text = $did(AutoDL, 2, $$2).text
n165=    var %leftpos = $pos(%text, ., 1)
n166=    var %replacetext = $right(%text, $calc((%leftpos - 1) - (2 * (%leftpos - 1))))
n167=    did -oz AutoDL 2 $$2 $replace(%text, %replacetext, $+(..., $$3))
n168=  }
n169=  elseif ($$1 == Clear) {
n170=    hdel -w UIDownloadList *
n171=    %ActiveDLLoc = 1
n172=    %DownloadIndex = 0
n173=    did -r AutoDL 2
n174=  }
n175=}
n176=
n177=;;;
n178=;;;/AutoDL_Notification <message>
n179=;;;
n180=alias -l /AutoDL_Notification {
n181=  did -az AutoDL 18 $$1-
n182=  if ($did(AutoDL, 101).state == 1) {
n183=    echo 2 -s $$1-
n184=  } 
n185=}
n186=
n187=;;;
n188=;;;Used by wrapper to update GUI on next download
n189=;;;
n190=alias /Downloading {
n191=  var %Counter = %ActiveDLLoc
n192=  var %MaxCounter = %DownloadIndex
n193=  while (%Counter <= %MaxCounter) {
n194=    var %download = $hget(UIDownloadList, %Counter)
n195=    if (($gettok(%download, 1, 44) == $$1) && ($gettok(%download, 2, 44) == $$2)) {
n196=      /AutoDL_UI Status %Counter Downloading
n197=      %ActiveDLLoc = %Counter
n198=      break
n199=    }
n200=  }
n201=}
n202=
n203=;;;
n204=;;;Used by wrapper to update GUI on current download
n205=;;;
n206=alias /DownloadStatusUpdate {
n207=  var %status
n208=  if ($$1 == Finished) {
n209=    %status = Complete
n210=    hdel UIDownloadList %ActiveDLLoc
n211=    /AutoDL_Notification *Download Queue Finished
n212=  }
n213=  elseif (($$1 == Complete) || ($$1 == Failed)) {
n214=    %status = $$1
n215=    hdel UIDownloadList %ActiveDLLoc
n216=  }
n217=  elseif ($$1 == Retrying) {
n218=    %status = $$1
n219=  }
n220=  /AutoDL_UI Update %ActiveDLLoc %status
n221=}
n222=
n223=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n224=;;;;;;;;;;;;;;;;;;;;;GUI Events;;;;;;;;;;;;;;;;;;;;;;;;
n225=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n226=
n227=on *:dialog:HelpDL:init:0:{
n228=  did -a HelpDL 1 See Wiki @ github.com/Rinsho/mIRCAutoDL/wiki
n229=}
n230=
n231=;;;
n232=;;;Initialize AutoDL Event
n233=;;;
n234=on *:dialog:AutoDL:init:0:{
n235=  set -e %DLLName " $+ $nofile($mircexe) $+ mIRCWrapper.dll $+ "
n236=  set -e %DownloadDelay 5
n237=  set -e %DownloadIndex 0
n238=  set -e %ActiveDLLoc 1
n239=  hmake UIDownloadList 10
n240=  hmake AliasList 10
n241=}
n242=
n243=;;;
n244=;;;Close AutoDL Event
n245=;;;
n246=on *:dialog:AutoDL:close:0:{
n247=  dll -u %DLLName
n248=  hfree UIDownloadList
n249=  hfree AliasList
n250=  unset %DLLName
n251=  unset %DownloadDelay
n252=  unset %DownloadIndex
n253=  unset %ActiveDLLoc
n254=  .rlevel -r AutoDLTrustedSources
n255=}
n256=
n257=;;;
n258=;;;Download Delay Event
n259=;;;
n260=on *:dialog:DownloadDelay:init:0:{
n261=  did -a DownloadDelay 2 %DownloadDelay
n262=}
n263=
n264=;;;
n265=;;;Menu->Aliases->View/Remove Alias Event
n266=;;;
n267=on *:dialog:AutoDL:menu:57:{
n268=  if ($dialog(DeleteAlias, DeleteAliasTable) && (%DeleteSelection != null)) {
n269=    %DeleteSelection = $remove(%DeleteSelection, $chr(32))
n270=    var %return = $dll(%DLLName, Alias_Remove, %DeleteSelection)   
n271=    if (%return == #OK) {
n272=      hdel AliasList %DeleteSelection
n273=    }
n274=    else {
n275=      tokenize 44 %result
n276=      /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n277=    }
n278=  }
n279=  unset %DeleteSelection
n280=}
n281=
n282=;;;
n283=;;;DeleteAlias Initialize Event
n284=;;;
n285=on *:dialog:DeleteAlias:init:0:{
n286=  var %hashSize = $hget(AliasList, 0).item
n287=  if (%hashSize > 0) {
n288=    var %Bot
n289=    var %Alias
n290=    var %Counter = 1
n291=    var %MaxCounter = %hashSize
n292=    while (%Counter <= %MaxCounter) {
n293=      %Alias = $hget(AliasList, %Counter).item
n294=      %Bot = $hget(AliasList, %Alias)
n295=      did -a DeleteNick 2 $+(%Alias,$chr(32),$chr(58),$chr(32),%Bot)
n296=      inc %Counter 1
n297=    }
n298=  }
n299=  set -e %DeleteSelection null
n300=}
n301=
n302=;;;
n303=;;;DeleteAlias Selection Event
n304=;;;
n305=on *:dialog:DeleteAlias:sclick:2:{
n306=  %DeleteSelection = $gettok($did(DeleteAlias, 2).seltext, 1, 58)
n307=}
n308=
n309=;;;
n310=;;;Clear Queue Event
n311=;;;
n312=on *:dialog:AutoDL:sclick:3:{
n313=  var %result = $dll(%DLLName, Download_Clear, None)
n314=  if (%result == #OK) {  
n315=    /AutoDL_UI Clear
n316=  }
n317=  else {
n318=    tokenize 44 %result
n319=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n320=  }
n321=}
n322=
n323=;;;
n324=;;;Save Queue Event
n325=;;;
n326=on *:dialog:AutoDL:sclick:14:{
n327=  var %result = $dll(%DLLName, Download_Save, None)
n328=  if (%result == #OK) {
n329=    var %Counter = %ActiveDLLoc
n330=    var %MaxCounter = %DownloadIndex
n331=    while (%Counter <= %MaxCounter) {
n332=      /AutoDL_UI Status %Counter Saved
n333=      inc %Counter 1
n334=    }
n335=    %ActiveDLLoc = $calc(%DownloadIndex + 1)
n336=  }
n337=  else {
n338=    tokenize 44 %result
n339=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n340=  }
n341=}
n342=
n343=;;;
n344=;;;Load Queue Event
n345=;;;
n346=on *:dialog:AutoDL:sclick:15:{
n347=  var %result = $dll(%DLLName, Download_Load, None)
n348=  if ($gettok(%result, 1, 44) != #Error) {
n349=    var %Counter = 1
n350=    var %MaxCounter = $numtok(%result, 35)   
n351=    tokenize 35 %result
n352=    while (%Counter <= %MaxCounter) {
n353=      var %Token = $ [ $+ [ %Counter ] ]
n354=      var %Bot = $gettok(%Token, 1, 44)
n355=      var %Count = 2
n356=      var %MaxCount = $numtok(%Token, 44)
n357=      while (%Count <= %MaxCount) {
n358=        var %Packet = $gettok(%Token, %Count, 44)
n359=        /AutoDL_UI Add %Bot %Packet
n360=        inc %Count 1
n361=      }
n362=      inc %Counter 1
n363=    }
n364=  }
n365=  else {
n366=    tokenize 44 %FileList
n367=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n368=  }
n369=}
n370=
n371=;;;
n372=;;;Add Download Event
n373=;;;
n374=on *:dialog:AutoDL:sclick:12:{
n375=  var %BotName = $did(9)
n376=  var %FileList = $did(11)
n377=  var %Trimming = $true
n378=  while (%Trimming) {
n379=    if ($right(%FileList, 1) == $chr(32) || $right(%FileList, 1) == $chr(44)) {
n380=      %FileList = $left(%FileList, -1)
n381=    }
n382=    else {
n383=      %Trimming = $false
n384=    }
n385=  }
n386=  %FileList = $regsubex(%FileList, $+(/[\s,$chr(44),]+/g), $chr(44))
n387=  var %NumFiles = $numtok(%FileList, 44)
n388=  var %Counter = 2
n389=  var %DownloadList = $+(%BotName, $chr(44), $gettok(%FileList, 1, 44)
n390=  while (%Counter <= %NumFiles) {
n391=    %DownloadList = $+(%DownloadList, $chr(44), %BotName, $chr(44), $gettok(%FileList, %Counter, 44)
n392=    inc %Counter 1
n393=  }
n394=
n395=  var %result = $dll(%DLLName, Download_Add, %DownloadList)  
n396=  if (%result == #OK) {
n397=    var %Counter = 1
n398=    var %MaxCounter = $numtok(%FileList, 44)
n399=    tokenize 44 %FileList
n400=    while (%Counter <= %MaxCounter) {
n401=      /AutoDL_UI Add %BotName $ [ $+ [ %Counter ] ]
n402=      inc %Counter 1
n403=    }
n404=    did -r AutoDL 9
n405=    did -r AutoDL 11
n406=  }
n407=  else {
n408=    tokenize 44 %result
n409=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n410=  }
n411=}
n412=
n413=;;;
n414=;;;Remove Download Event
n415=;;;
n416=on *:dialog:AutoDL:sclick:17:{
n417=  var %Counter = 1
n418=  var %MaxCounter = $did(AutoDL, 2, 0).sel
n419=  while (%Counter <= %MaxCounter) {
n420=    var %LineNumber = $did(AutoDL, 2, %Counter).sel
n421=    inc %Counter 1
n422=    if (%LineNumber != %ActiveDLLoc) {
n423=      var %Data = $did(AutoDL, 2).seltext
n424=      var %Bot = $gettok(%Data, 1, 32)
n425=      var %Packet = $gettok(%Data, 2, 32)
n426=      %Packet = $right(%Packet, $calc($len(%Packet) - 1))
n427=      var %result = $dll(%DLLName, Download_Remove, $+(%Bot, $chr(44), %Packet))
n428=      if (%result == #OK) {
n429=        /AutoDL_UI Status %LineNumber Cancelled
n430=      }
n431=      else {
n432=        tokenize 44 %result
n433=        /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n434=      }
n435=    }
n436=    else {
n437=      /AutoDL_Notification *Cannot remove download in progress.
n438=    }
n439=  }
n440=}
n441=
n442=;;;
n443=;;;Menu->Settings->Notifications Event
n444=;;;
n445=on *:dialog:AutoDL:menu:101:{
n446=  if ($did(101).state == 1) {
n447=    did -u AutoDL 101
n448=  }
n449=  else {
n450=    did -c AutoDL 101
n451=  }
n452=}
n453=
n454=;;;
n455=;;;Menu->Settings->Retry Failed Download Event
n456=;;;
n457=on *:dialog:AutoDL:menu:102:{
n458=  var %tempValue
n459=  if ($did(102).state == 1) {
n460=    did -u AutoDL 102
n461=    %tempValue = false
n462=  }
n463=  else {
n464=    did -c AutoDL 102
n465=    %tempValue = true
n466=  }
n467=  var %result = $dll(%DLLName, Setting_Update, $+(RetryFailedDownload, $chr(44), %tempValue))
n468=  if (%result != #OK) {
n469=    if ($did(102).state == 1) {
n470=      did -u AutoDL 102
n471=    }
n472=    else {
n473=      did -c AutoDL 102
n474=    }
n475=    tokenize 44 %result
n476=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n477=  }
n478=}
n479=
n480=;;;
n481=;;;Menu->Settings->Download Delay Event
n482=;;;
n483=on *:dialog:AutoDL:menu:103:{
n484=  var %newDelay = $dialog(DownloadDelay, DownloadDelayTable)
n485=  if (%newDelay isnum) {
n486=    var %result = $dll(%DLLName, Setting_Update, $+(DownloadDelay, $chr(44), %newDelay))
n487=    if (%result == #OK) {
n488=      %DownloadDelay = %newDelay
n489=    }
n490=    else {
n491=      tokenize 44 %result
n492=      /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n493=    }
n494=  }
n495=}
n496=
n497=;;;
n498=;;;Menu->Exit Event
n499=;;;
n500=on *:dialog:AutoDL:menu:53:{
n501=  dialog -k AutoDL
n502=}
n503=
n504=;;;
n505=;;;Menu->Help Event
n506=;;;
n507=on *:dialog:AutoDL:menu:54:{
n508=  dialog -m HelpDL HelpDLTable
n509=}
n510=
n511=;;;
n512=;;;Menu->Aliases->Add Alias Event
n513=;;;
n514=on *:dialog:AutoDL:menu:55:{
n515=  if ($dialog(AddAlias, AddAliasTable)) {
n516=    var %result = $dll(%DLLName, Alias_Add, $+(%Alias, $chr(44), %Bot))
n517=    if (%result == #OK) {
n518=      hadd AliasList %Alias %Bot
n519=    }
n520=    else {
n521=      tokenize 44 %result
n522=      /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n523=    }
n524=    unset %Bot
n525=    unset %Alias
n526=  }
n527=}
n528=
n529=;;;
n530=;;;Menu->Aliases->Clear Event
n531=;;;
n532=on *:dialog:AutoDL:menu:58:{
n533=  var %result = $dll(%DLLName, Alias_Clear, None)
n534=  if (%result == #OK) {
n535=    hdel -w AliasList *
n536=  }
n537=  else {
n538=    tokenize 44 %result
n539=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n540=  }
n541=}
n542=
n543=;;;
n544=;;;Menu->Save Settings Event
n545=;;;
n546=on *:dialog:AutoDL:menu:59:{
n547=  var %NewSettings = $+(RetryFailedDownload, $chr(44))
n548=  if ($did(102).state == 1) {
n549=    %NewSettings = $+(%NewSettings, true, $chr(35))
n550=  }
n551=  else {
n552=    %NewSettings = $+(%NewSettings, false, $chr(35))
n553=  }
n554=  %NewSettings = $+(%NewSettings, DownloadDelay, $chr(44), %DownloadDelay)
n555=  var %result = $dll(%DLLName, Setting_Save, %NewSettings)
n556=  if (%result != #OK) {
n557=    tokenize 44 %result
n558=    /AutoDL_Notification $+($1, $chr(58), $chr(32), $2)
n559=  }
n560=}
n561=
n562=;;;
n563=;;;Join Channel Event
n564=;;;
n565=on *:dialog:AutoDL:sclick:6:{
n566=  var %ChannelName = $did(5)
n567=  if ($left(%ChannelName,1) != $chr(35)) {
n568=    %ChannelName = $chr(35) $+ %ChannelName
n569=  }
n570=  join %ChannelName
n571=  did -r AutoDL 5
n572=}
n573=
n574=;------------------------------------------------------
n575=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
n576=;;;;;;;;;;;;;;;;;;End of Auto-DL BETA;;;;;;;;;;;;;;;;;;
n577=;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
